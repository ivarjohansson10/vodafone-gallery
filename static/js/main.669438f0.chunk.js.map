{"version":3,"sources":["assets/vodafone_logo.svg","components/PhoneThumbnails.js","components/PhoneDetails.js","components/Gallery.js","components/MyFilterButton.js","components/GalleryContainer.js","App.js","serviceWorker.js","index.js"],"names":["PhoneThumbnails","this","props","images","map","item","className","src","alt","React","Component","PhoneDetails","Object","entries","data","variants","i","key","pricingOptions","outOfStock","htmlFor","colour","replace","toLowerCase","type","name","id","value","onChange","renderThumbnails","phoneImages","defaultChecked","imageSrc","renderColours","dangerouslySetInnerHTML","__html","summary","capacity","price","j","colorCode","planName","planPrice","phonePrice","dataAllowance","fieldItems","initialPhonePrice","initialPlan","document","getElementById","style","display","setTimeout","ReactDOM","render","Gallery","getDetails","fetch","process","then","r","json","findId","window","scroll","top","behavior","idToFind","categoryArray","products","length","closeOverlay","unmountComponentAtNode","onClick","results","checkIfSoldOut","array","variantsInStock","MyFilterButton","handleChange","setState","enabledFilter","state","GalleryContainer","filterResults","obj","filtered","filters","brands","includes","brand","os","z","specifications","maxPrice","parseFloat","push","sortResultsByPrice","sort","a","b","getPhones","pageNumber","sorted","start","end","pageResults","slice","nextPage","prevPage","toggleBrands","filter","e","toggleOS","toggleMaxPrice","sortResults","nextPageNumber","prevPageNumber","PageButton","App","MainLogo","Boolean","location","hostname","match","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"gNAAe,G,YAAA,IAA0B,2C,iDCkB1BA,E,4JAfb,WACE,OACE,8BACE,6BACGC,KAAKC,MAAMC,OAAOC,KAAI,SAACC,GAAD,OACrB,oBAAeC,UAAU,YAAzB,SACE,qBAAKC,IAAKF,EAAMG,IAAKH,KADdA,c,GANSI,IAAMC,WCE9BC,E,mKAEJ,WACE,OAAOC,OAAOC,QAAQZ,KAAKC,MAAMY,KAAKC,UAAUX,KAC9C,WAAkBY,GAAO,IAAD,mBAAtBC,EAAsB,KAAjBF,EAAiB,KACtB,OACE,qBAAeT,UAAWS,EAASG,eAAe,GAAGC,WAAa,gBAAkB,GAApF,SACE,wBACEb,UAAU,qBAEVc,QAASL,EAASM,OAAOC,QAAQ,IAAK,IAAIC,cAH5C,UAKGR,EAASM,OACV,uBACEG,KAAK,QACLC,KAAK,SACLC,GAAIX,EAASM,OAAOC,QAAQ,IAAK,IAAIC,cACrCI,MAAOZ,EAASM,OAAOC,QAAQ,IAAK,IAAIC,cACxCK,SAAU,kBAAMC,EAAiBd,EAASe,cAC1CC,eAAsB,IAANf,IAEX,IAANA,EAAUa,EAAiBd,EAASe,aAAe,KAZ/Cb,IAHCA,Q,oBAuBlB,WACE,OACE,gCACE,qBACEX,UAAU,aACVC,IAAKN,KAAKC,MAAMY,KAAKkB,SACrBxB,IAAKP,KAAKC,MAAMY,KAAKW,OAEvB,6BAAKxB,KAAKC,MAAMY,KAAKW,OACrB,qBAAKC,GAAG,eACR,gCACGzB,KAAKgC,gBACN,qBACEC,wBAAyB,CAAEC,OAAQlC,KAAKC,MAAMY,KAAKsB,WAEpDxB,OAAOC,QAAQZ,KAAKC,MAAMY,KAAKC,UAAUX,KACxC,WAAkBY,GAAO,IAAD,mBAAtBC,EAAsB,KAAjBF,EAAiB,KACtB,OACE,8BACE,8BACGH,OAAOC,QAAQE,EAASG,gBAAgBd,KACvC,YAA4B,IAAD,mBAAzBa,EAAyB,KAApBC,EAAoB,KACzB,OACE,gCACE,qBAAKZ,UAAW,kBAAhB,SACE,uBAAMA,UAAWY,EAAeC,WAAa,gBAAkB,GAA/D,UACE,yCACCJ,EAASM,OAFZ,IAEoB,2CACjBH,EAAemB,cAGpB,8BACGzB,OAAOC,QAAQK,EAAeoB,OAAOlC,KACpC,WAAemC,GAAO,IAAD,mBAAnBtB,EAAmB,KAAdqB,EAAc,KACnB,OACE,wBAEEhC,UAAU,qBACVc,QACEF,EAAemB,SACZf,QAAQ,IAAK,KAChBP,EAASyB,UACNlB,QAAQ,IAAK,IAChBgB,EAAMG,SACHnB,QAAQ,IAAK,KACbC,cAVP,UAaE,uBACEC,KAAK,QACLC,KAAK,OACLC,GACER,EAAemB,SACZf,QAAQ,IAAK,KAChBP,EAASyB,UACNlB,QAAQ,IAAK,IAChBgB,EAAMG,SACHnB,QAAQ,IAAK,KACbC,cAELI,MACET,EAAemB,SACZf,QAAQ,IAAK,KAChBP,EAASyB,UACNlB,QAAQ,IAAK,IAChBgB,EAAMG,SACHnB,QAAQ,IAAK,KACbC,gBAGP,gCACE,4CACCe,EAAMG,YAET,gCACE,6CACCH,EAAMI,aAET,gCACE,8CACsB,SAArBJ,EAAMK,WACH,OACAL,EAAMK,cAEZ,gCACE,iDACCL,EAAMM,mBAlDJ3B,UAbPA,SALVA,MAoFhB,qBAAKiB,wBAAyB,CAAEC,OAAQlC,KAAKC,MAAMY,KAAK+B,cACxD,uBACA,+BACE,6BACE,6BAAK5C,KAAKC,MAAMY,KAAKW,SAEvB,+BACE,iDAC6C,SAA5CxB,KAAKC,MAAMY,KAAKgC,kBAAkBnB,MAC/B,OACA,SAAM1B,KAAKC,MAAMY,KAAKgC,kBAAkBnB,SAE9C,+BACE,oDACC1B,KAAKC,MAAMY,KAAKiC,YAAYN,YAE/B,+BACE,qDADF,SAEGxC,KAAKC,MAAMY,KAAKiC,YAAYL,wB,kCAQzC,WACEM,SAASC,eAAe,iBAAiBC,MAAMC,QAAU,OACzDH,SAASC,eAAe,WAAWC,MAAMC,QAAU,W,GA/J5B1C,IAAMC,WAoK3BmB,EAAmB,SAAC1B,GACxBiD,YAAW,WACTC,IAASC,OACP,cAAC,EAAD,CAAiBnD,OAAQA,IACzB6C,SAASC,eAAe,iBAEzB,MAGUtC,IClFA4C,E,4MAlDbC,WAAa,SAAC9B,GAEZ+B,MAAM,GAAD,OAAIC,oBAAJ,qBACFC,MAAK,SAACC,GAAD,OAAOA,EAAEC,UACdF,MAAK,SAAC7C,GACL,IAAMT,EAAO,EAAKyD,OAAOhD,EAAMY,GAC/B2B,IAASC,OACP,cAAC,EAAD,CAAcxC,KAAMT,IACpB2C,SAASC,eAAe,kBAE1BD,SAASC,eAAe,iBAAiBC,MAAMC,QAAU,QACzDH,SAASC,eAAe,WAAWC,MAAMC,QAAU,QACnDY,OAAOC,OAAO,CAAEC,IAAK,EAAGC,SAAU,e,EAKxCJ,OAAS,SAAChD,EAAMqD,GAEd,IADA,IAAIC,EAAgBtD,EAAKuD,SAChBrD,EAAI,EAAGA,EAAIoD,EAAcE,OAAQtD,IACxC,GAAIoD,EAAcpD,GAAGU,KAAOyC,EAC1B,OAAOC,EAAcpD,I,EAqB3BuD,aAAe,WACbC,iCAAuBxB,SAASC,eAAe,mB,4CA/EjD,WAAU,IAAD,OACP,OACE,gCACE,qBACEvB,GAAG,UACHpB,UAAU,UACVmE,QAAS,kBAAM,EAAKF,kBAEtB,6BACGtE,KAAKC,MAAMwE,QAAQtE,KAAI,SAACC,GAAD,OACtB,qBAAkBC,UAAU,aAA5B,UACE,qBAAKC,IAAKF,EAAK2B,SAAUxB,IAAKH,EAAKoB,OACnC,6BAAKpB,EAAKoB,OACV,4BACoC,SAAjCpB,EAAKyC,kBAAkBnB,MACpB,OACA,SAAMtB,EAAKyC,kBAAkBnB,QAEnC,+BACE,+BACE,4CACCtB,EAAK0C,YAAYN,YAEpB,+BACE,6CADF,SACuBpC,EAAK0C,YAAYL,gBAGzC,EAAKiC,eAAetE,EAAKU,UAAY,yCAAkB,yCACxD,wBAAQ0D,QAAS,kBAAM,EAAKjB,WAAWnD,EAAKqB,KAA5C,4BAlBOrB,EAAKqB,c,4BAoDxB,SAAekD,GAGb,IAFA,IAAIC,EAAkB,EAEb7D,EAAI,EAAGA,EAAI4D,EAAMN,OAAQtD,KACc,IAA1C4D,EAAM5D,GAAGE,eAAe,GAAGC,YAC7B0D,IAIJ,OAAIA,IAAoBD,EAAMN,W,GAzEZ7D,IAAMC,WC+BboE,E,kDAjCb,WAAY5E,GAAQ,IAAD,8BACjB,cAAMA,IAOR6E,aAAe,WACb,EAAKC,SAAS,CAAEC,eAAgB,EAAKC,MAAMD,iBAP3C,EAAKC,MAAQ,CACXD,eAAe,GAHA,E,0CAanB,WACE,OACE,sBAAK3E,UAAU,UAAf,UACE,uBACEc,QAASnB,KAAKC,MAAMuB,KACpBnB,UAAWL,KAAKiF,MAAMD,cAAgB,SAAW,OAFnD,SAIGhF,KAAKC,MAAMuB,OAEd,uBACED,KAAK,WACLE,GAAIzB,KAAKC,MAAMuB,KACfgD,QAASxE,KAAKC,MAAMuE,QACpB7C,SAAU3B,KAAK8E,sB,GA7BItE,IAAMC,WCI7ByE,E,kDAEJ,WAAYjF,GAAQ,IAAD,8BACjB,cAAMA,IAmCRkF,cAAgB,SAACtE,GAKb,IAHA,IAAI4D,EAAU,GAGL1D,EAAI,EAAGA,EAAIF,EAAKuD,SAASC,OAAQtD,IAAK,CAE7C,IAAMqE,EAAMvE,EAAKuD,SAASrD,GACtBsE,GAAW,EAG0B,IAArC,EAAKJ,MAAMK,QAAQC,OAAOlB,QAAgB,EAAKY,MAAMK,QAAQC,OAAOC,SAASJ,EAAIK,SACnFJ,GAAW,GAMb,IAFA,IAAIK,EAAK,GAEAC,EAAI,EAAGA,EAAIP,EAAIQ,eAAevB,OAAQsB,IACV,qBAA/BP,EAAIQ,eAAeD,GAAGnE,OACxBkE,EAAKN,EAAIQ,eAAeD,GAAGjE,OAKM,IAAjC,EAAKuD,MAAMK,QAAQI,GAAGrB,QAAiB,EAAKY,MAAMK,QAAQI,GAAGF,SAASE,KACxEL,GAAW,GAIT,EAAKJ,MAAMK,QAAQO,SAAWC,WAAWV,EAAIvC,kBAAkBnB,SACjE2D,GAAW,IAII,IAAbA,GACFZ,EAAQsB,KAAKX,GAIjB,OAAOX,GA5EQ,EAiFnBuB,mBAAqB,SAACX,GAMpB,OAJAA,EAASY,MAAK,SAASC,EAAGC,GACxB,OAAOD,EAAErD,kBAAkBnB,MAAQyE,EAAEtD,kBAAkBnB,SAGlD2D,GAvFU,EA4FnBe,UAAY,SAACC,GAEX7C,MAAM,GAAD,OAAIC,oBAAJ,qBACFC,MAAK,SAACC,GAAD,OAAOA,EAAEC,UACdF,MAAK,SAAC7C,GAEL,IAAIwE,EAAW,EAAKF,cAActE,GAG9B,EAAKoE,MAAMK,QAAQgB,SACrBjB,EAAW,EAAKW,mBAAmBX,IAIrC,IAAIkB,EAAQ,EACRC,EAAM,EAGS,IAAfH,GAAoBhB,EAAShB,OAAS,IAExCmC,GADAD,EAAqB,EAAbF,GACM,GAGhB,IAAMI,EAAcpB,EAASqB,MAAMH,EAAOC,GAEtCnB,EAAShB,OAAS,GAA4B,IAAvBoC,EAAYpC,OACrCjB,IAASC,OACP,cAAC,EAAD,CAAY7B,KAAK,YAAYgD,QAAS,kBAAM,EAAKmC,cACjD5D,SAASC,eAAe,eAEF,IAAfqD,EACTjD,IAASC,OACP,cAAC,EAAD,CAAY7B,KAAK,YAAYgD,QAAS,kBAAM,EAAKoC,cACjD7D,SAASC,eAAe,eAG1BuB,iCAAuBxB,SAASC,eAAe,eAIjDI,IAASC,OACP,cAAC,EAAD,CAASoB,QAASgC,IAClB1D,SAASC,eAAe,gBAtIb,EA8InB6D,aAAe,SAACC,GAEd,IAAMxB,EAAO,eAAO,EAAKL,MAAMK,SAE1B,EAAKL,MAAMK,QAAQC,OAAOC,SAASsB,GAGtCxB,EAAQC,OAAS,EAAKN,MAAMK,QAAQC,OAAOuB,QAAO,SAAUC,GAC1D,OAAOA,IAAMD,KAHfxB,EAAQC,OAAOQ,KAAKe,GAOtB,EAAK/B,SAAS,CAACO,YACf,EAAKP,SAAS,CAACsB,WAAY,IAE3B,EAAKD,UAAU,IA7JE,EAiKnBY,SAAW,SAACF,GAEV,IAAMxB,EAAO,eAAO,EAAKL,MAAMK,SAE1B,EAAKL,MAAMK,QAAQI,GAAGF,SAASsB,GAGlCxB,EAAQI,GAAK,EAAKT,MAAMK,QAAQI,GAAGoB,QAAO,SAAUC,GAClD,OAAOA,IAAMD,KAHfxB,EAAQI,GAAGK,KAAKe,GAOlB,EAAK/B,SAAS,CAACO,YACf,EAAKP,SAAS,CAACsB,WAAY,IAE3B,EAAKD,UAAU,IAhLE,EAoLnBa,eAAiB,SAACH,GAEhB,IAAMxB,EAAO,eAAO,EAAKL,MAAMK,SAE3B,EAAKL,MAAMK,QAAQO,WAAaiB,EAClCxB,EAAQO,SAAWiB,EAEnBxB,EAAQO,SAAW,IAGrB,EAAKd,SAAS,CAACO,YACf,EAAKP,SAAS,CAACsB,WAAY,IAC3B,EAAKD,UAAU,IAhME,EAoMnBc,YAAc,SAACJ,GAEb,IAAMxB,EAAO,eAAO,EAAKL,MAAMK,SAE3B,EAAKL,MAAMK,QAAQgB,OACrBhB,EAAQgB,QAAS,EAEjBhB,EAAQgB,QAAS,EAGnB,EAAKvB,SAAS,CAACO,YACf,EAAKc,UAAU,EAAKnB,MAAMoB,aA/MT,EAmNnBM,SAAW,WAET,IAAMQ,EAAiB,EAAKlC,MAAMoB,WAAa,EAE/C,EAAKtB,SAAS,CACVsB,WAAYc,IACb,WACC,EAAKf,UAAU,EAAKnB,MAAMoB,gBA1Nb,EAgOnBO,SAAW,WAET,IAAMQ,EAAiB,EAAKnC,MAAMoB,WAAa,EAE/C,EAAKtB,SAAS,CAACsB,WAAYe,IAE3B,EAAKrC,SAAS,CACVsB,WAAYe,IACb,WACC,EAAKhB,UAAU,EAAKnB,MAAMoB,gBAvO9B,EAAKpB,MAAQ,CACXK,QAAS,CACLC,OAAQ,GACRG,GAAI,GACJG,SAAU,KACVS,QAAQ,GAEZD,WAAY,GATG,E,0CAcnB,WAAU,IAAD,OACP,OACE,gCACE,cAAC,EAAD,CAAgB7E,KAAK,QAAQgD,QAAS,kBAAM,EAAKqC,aAAa,YAC9D,cAAC,EAAD,CAAgBrF,KAAK,UAAUgD,QAAS,kBAAM,EAAKqC,aAAa,cAChE,cAAC,EAAD,CAAgBrF,KAAK,UAAUgD,QAAS,kBAAM,EAAKwC,SAAS,cAC5D,cAAC,EAAD,CAAgBxF,KAAK,MAAMgD,QAAS,kBAAM,EAAKwC,SAAS,UACxD,cAAC,EAAD,CAAgBxF,KAAK,cAASgD,QAAS,kBAAM,EAAKyC,eAAe,QACjE,cAAC,EAAD,CAAgBzF,KAAK,cAASgD,QAAS,kBAAM,EAAKyC,eAAe,QACjE,cAAC,EAAD,CAAgBzF,KAAK,8BAA8BgD,QAAS,kBAAM,EAAK0C,iBACvE,qBAAKzF,GAAG,YACR,qBAAKA,GAAG,oB,+BAMd,WACEzB,KAAKoG,UAAU,O,GAlCY5F,IAAMC,WAmP/B4G,E,4JACJ,WACE,OAAO,wBAAQ7C,QAASxE,KAAKC,MAAMuE,QAA5B,SAAsCxE,KAAKC,MAAMuB,W,GAFnChB,IAAMC,WAOhByE,IC/OAoC,EAZH,WACV,OACE,sBAAKjH,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACI,qBAAKA,UAAU,YAAYC,IAAKiH,EAAUhH,IAAI,eAElD,cAAC,EAAD,IACA,qBAAKkB,GAAG,gBAAgBpB,UAAU,cCApBmH,QACW,cAA7B1D,OAAO2D,SAASC,UAEe,UAA7B5D,OAAO2D,SAASC,UAEhB5D,OAAO2D,SAASC,SAASC,MACvB,2DCZNvE,IAASC,OACP,cAAC,IAAMuE,WAAP,UACE,cAAC,EAAD,MAEF7E,SAASC,eAAe,SDyHpB,kBAAmB6E,WACrBA,UAAUC,cAAcC,MACrBrE,MAAK,SAAAsE,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.669438f0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/vodafone_logo.e5d27904.svg\";","import React from \"react\";\r\n\r\nclass PhoneThumbnails extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ul>\r\n          {this.props.images.map((item) => (\r\n            <li key={item} className=\"thumbnail\">\r\n              <img src={item} alt={item} />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PhoneThumbnails;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport PhoneThumbnails from \"../components/PhoneThumbnails\";\r\n\r\nclass PhoneDetails extends React.Component {\r\n  \r\n  renderColours() {\r\n    return Object.entries(this.props.data.variants).map(\r\n      ([key, variants], i) => {\r\n        return (\r\n          <div key={key} className={variants.pricingOptions[0].outOfStock ? \"strikethrough\" : \"\"}>\r\n            <label\r\n              className=\"radio-button-label\"\r\n              key={key}\r\n              htmlFor={variants.colour.replace(\"#\", \"\").toLowerCase()}\r\n            >\r\n              {variants.colour}\r\n              <input\r\n                type=\"radio\"\r\n                name=\"colour\"\r\n                id={variants.colour.replace(\"#\", \"\").toLowerCase()}\r\n                value={variants.colour.replace(\"#\", \"\").toLowerCase()}\r\n                onChange={() => renderThumbnails(variants.phoneImages)}\r\n                defaultChecked={i === 0}\r\n              />\r\n              {i === 0 ? renderThumbnails(variants.phoneImages) : \"\"}\r\n            </label>\r\n          </div>\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <img\r\n          className=\"main-image\"\r\n          src={this.props.data.imageSrc}\r\n          alt={this.props.data.name}\r\n        />\r\n        <h2>{this.props.data.name}</h2>\r\n        <div id=\"thumbnails\"></div>\r\n        <div>\r\n          {this.renderColours()}\r\n          <div\r\n            dangerouslySetInnerHTML={{ __html: this.props.data.summary }}\r\n          ></div>\r\n          {Object.entries(this.props.data.variants).map(\r\n            ([key, variants], i) => {\r\n              return (\r\n                <div key={key}>\r\n                  <div>\r\n                    {Object.entries(variants.pricingOptions).map(\r\n                      ([key, pricingOptions]) => {\r\n                        return (\r\n                          <div key={key}>\r\n                            <div className={\"grey-background\"}>\r\n                              <span className={pricingOptions.outOfStock ? \"strikethrough\" : \"\"}>\r\n                                <b>Colour: </b>\r\n                                {variants.colour} <b>Capacity: </b>\r\n                                {pricingOptions.capacity}\r\n                              </span>\r\n                            </div>\r\n                            <div>\r\n                              {Object.entries(pricingOptions.price).map(\r\n                                ([key, price], j) => {\r\n                                  return (\r\n                                    <label\r\n                                      key={key}\r\n                                      className=\"radio-button-label\"\r\n                                      htmlFor={\r\n                                        pricingOptions.capacity\r\n                                          .replace(\" \", \"-\" ) +\r\n                                        variants.colorCode\r\n                                          .replace(\"#\", \"\") +\r\n                                        price.planName\r\n                                          .replace(\" \", \"-\")\r\n                                          .toLowerCase()\r\n                                      }\r\n                                    >\r\n                                      <input\r\n                                        type=\"radio\"\r\n                                        name=\"plan\"\r\n                                        id={\r\n                                          pricingOptions.capacity\r\n                                            .replace(\" \", \"-\") +\r\n                                          variants.colorCode\r\n                                            .replace(\"#\", \"\") +\r\n                                          price.planName\r\n                                            .replace(\" \", \"-\")\r\n                                            .toLowerCase()\r\n                                        }\r\n                                        value={\r\n                                          pricingOptions.capacity\r\n                                            .replace(\" \", \"-\") +\r\n                                          variants.colorCode\r\n                                            .replace(\"#\", \"\") +\r\n                                          price.planName\r\n                                            .replace(\" \", \"-\")\r\n                                            .toLowerCase()\r\n                                        }\r\n                                      />\r\n                                      <div>\r\n                                        <b>Plan Name: </b>\r\n                                        {price.planName}\r\n                                      </div>\r\n                                      <div>\r\n                                        <b>Plan Price: </b>\r\n                                        {price.planPrice}\r\n                                      </div>\r\n                                      <div>\r\n                                        <b>Phone Price: </b>\r\n                                        {price.phonePrice === \"0.00\"\r\n                                          ? \"Free\"\r\n                                          : price.phonePrice}\r\n                                      </div>\r\n                                      <div>\r\n                                        <b>Data Allowance: </b>\r\n                                        {price.dataAllowance}\r\n                                      </div>\r\n                                    </label>\r\n                                  );\r\n                                }\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        );\r\n                      }\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              );\r\n            }\r\n          )}\r\n          <div dangerouslySetInnerHTML={{ __html: this.props.data.fieldItems }}></div>\r\n          <hr />\r\n          <ul>\r\n            <li>\r\n              <h4>{this.props.data.name}</h4>\r\n            </li>\r\n            <li>\r\n              <b>Once Off Price: </b>\r\n              {this.props.data.initialPhonePrice.value === \"0.00\"\r\n                ? \"Free\"\r\n                : \"€\" + this.props.data.initialPhonePrice.value}\r\n            </li>\r\n            <li>\r\n              <b>Monthly Plan Name: </b>\r\n              {this.props.data.initialPlan.planName}\r\n            </li>\r\n            <li>\r\n              <b>Monthly Plan Price: </b>€\r\n              {this.props.data.initialPlan.planPrice}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.getElementById(\"phone-details\").style.display = \"none\";\r\n    document.getElementById(\"overlay\").style.display = \"none\";\r\n  }\r\n  \r\n}\r\n\r\nconst renderThumbnails = (images) => {\r\n  setTimeout(function () {\r\n    ReactDOM.render(\r\n      <PhoneThumbnails images={images} />,\r\n      document.getElementById(\"thumbnails\")\r\n    );\r\n  }, 100);\r\n};\r\n\r\nexport default PhoneDetails;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport PhoneDetails from \"../components/PhoneDetails\";\r\nimport { unmountComponentAtNode } from \"react-dom\";\r\n\r\n/* Gallery to display phones */\r\n\r\nclass Gallery extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div\r\n          id=\"overlay\"\r\n          className=\"overlay\"\r\n          onClick={() => this.closeOverlay()}\r\n        ></div>\r\n        <ul>\r\n          {this.props.results.map((item) => (\r\n            <li key={item.id} className=\"phone-cell\">\r\n              <img src={item.imageSrc} alt={item.name} />\r\n              <h2>{item.name}</h2>\r\n              <b>\r\n                {item.initialPhonePrice.value === \"0.00\"\r\n                  ? \"Free\"\r\n                  : \"€\" + item.initialPhonePrice.value}\r\n              </b>\r\n              <ul>\r\n                <li>\r\n                  <b>Plan Name: </b>\r\n                  {item.initialPlan.planName}\r\n                </li>\r\n                <li>\r\n                  <b>Plan Price: </b>€{item.initialPlan.planPrice}\r\n                </li>\r\n              </ul>\r\n              {this.checkIfSoldOut(item.variants) ? <b>Sold Out</b> : <b>In Stock</b>}\r\n              <button onClick={() => this.getDetails(item.id)}>Show details</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  getDetails = (id) => {\r\n\t\r\n    fetch(`${process.env.PUBLIC_URL}/api/phones.json`)\r\n      .then((r) => r.json())\r\n      .then((data) => {\r\n        const item = this.findId(data, id);\r\n        ReactDOM.render(\r\n          <PhoneDetails data={item} />,\r\n          document.getElementById(\"phone-details\")\r\n        );\r\n        document.getElementById(\"phone-details\").style.display = \"block\";\r\n        document.getElementById(\"overlay\").style.display = \"block\";\r\n        window.scroll({ top: 0, behavior: \"smooth\" });\r\n      });\r\n\r\n  }\r\n  \r\n  findId = (data, idToFind) => {\r\n    var categoryArray = data.products;\r\n    for (var i = 0; i < categoryArray.length; i++) {\r\n      if (categoryArray[i].id === idToFind) {\r\n        return categoryArray[i];\r\n      }\r\n    }\r\n  }\r\n  \r\n  checkIfSoldOut(array) {\r\n    let variantsInStock = 0;\r\n\r\n    for (var i = 0; i < array.length; i++) {\r\n      if (array[i].pricingOptions[0].outOfStock === false) {\r\n        variantsInStock++;\r\n      }\r\n    }\r\n\r\n    if (variantsInStock === array.length) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n  \r\n  closeOverlay = () => {\r\n    unmountComponentAtNode(document.getElementById(\"phone-details\"));\r\n  };\r\n  \r\n};\r\n\r\n\r\n\r\nexport default Gallery;\r\n","import React from \"react\";\r\n\r\nclass MyFilterButton extends React.Component {\r\n  \r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      enabledFilter: false,\r\n    };\r\n  }\r\n  \r\n  \r\n  handleChange = () => {\r\n    this.setState({ enabledFilter: !this.state.enabledFilter });\r\n  }\r\n  \r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"filters\">\r\n        <label\r\n          htmlFor={this.props.name}\r\n          className={this.state.enabledFilter ? \"active\" : \"idle\"}\r\n        >\r\n          {this.props.name}\r\n        </label>\r\n        <input\r\n          type=\"checkbox\"\r\n          id={this.props.name}\r\n          onClick={this.props.onClick}\r\n          onChange={this.handleChange}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyFilterButton;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Gallery from \"./Gallery\";\r\nimport MyFilterButton from \"./MyFilterButton\";\r\nimport { unmountComponentAtNode } from \"react-dom\";\r\n\r\nclass GalleryContainer extends React.Component {\r\n    \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      filters: {\r\n          brands: [],\r\n          os: [],\r\n          maxPrice: 9999,\r\n          sorted: false,\r\n        },\r\n      pageNumber: 0,\r\n    };\r\n  }\r\n  \r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n        <MyFilterButton name=\"Apple\" onClick={() => this.toggleBrands(\"Apple\")} />\r\n        <MyFilterButton name=\"Samsung\" onClick={() => this.toggleBrands(\"Samsung\")} />\r\n        <MyFilterButton name=\"Android\" onClick={() => this.toggleOS(\"Android\")} />\r\n        <MyFilterButton name=\"iOS\" onClick={() => this.toggleOS(\"iOS\")} />\r\n        <MyFilterButton name=\"< €500\" onClick={() => this.toggleMaxPrice(500)} />\r\n        <MyFilterButton name=\"< €300\" onClick={() => this.toggleMaxPrice(300)} />\r\n        <MyFilterButton name=\"Sort By Price (Low to High)\" onClick={() => this.sortResults()} />\r\n        <div id=\"gallery\"></div>\r\n        <div id=\"pagination\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  \r\n  componentDidMount() {\r\n    this.getPhones(0);\r\n  }\r\n  \r\n  \r\n  filterResults = (data) => {\r\n    \r\n      let results = [];\r\n\r\n      // Filter results\r\n      for (var i = 0; i < data.products.length; i++) {\r\n        // Display 9 results at max\r\n        const obj = data.products[i];\r\n        let filtered = false;\r\n\r\n        // Filter brands\r\n        if (this.state.filters.brands.length !== 0 &&!this.state.filters.brands.includes(obj.brand)) {\r\n          filtered = true;\r\n        }\r\n\r\n        // Find os of phone so it can be filtered\r\n        let os = \"\";\r\n\r\n        for (var z = 0; z < obj.specifications.length; z++) {\r\n          if (obj.specifications[z].name === \"Operation System\") {\r\n            os = obj.specifications[z].value;\r\n          }\r\n        }\r\n\r\n        // Find by os\r\n        if (this.state.filters.os.length !== 0 && !this.state.filters.os.includes(os)) {\r\n          filtered = true;\r\n        }\r\n\r\n        // Filter price\r\n        if (this.state.filters.maxPrice < parseFloat(obj.initialPhonePrice.value)) {\r\n          filtered = true;\r\n        }\r\n\r\n        // If this phone isn't filtered out add it to results array\r\n        if (filtered === false) {\r\n          results.push(obj);\r\n        }\r\n      }\r\n\r\n      return results;\r\n    \r\n  }\r\n\r\n  \r\n  sortResultsByPrice = (filtered) => {\r\n    \r\n    filtered.sort(function(a, b) {\r\n      return a.initialPhonePrice.value - b.initialPhonePrice.value;\r\n    });\r\n\r\n    return filtered;\r\n    \r\n  }\r\n\r\n  \r\n  getPhones = (pageNumber) => {\r\n\t\r\n    fetch(`${process.env.PUBLIC_URL}/api/phones.json`)\r\n      .then((r) => r.json())\r\n      .then((data) => {\r\n\r\n        let filtered = this.filterResults(data);\r\n\r\n        /* Sort results if sorted */\r\n        if (this.state.filters.sorted) {\r\n          filtered = this.sortResultsByPrice(filtered);\r\n        }\r\n\r\n        /* Settings for pagination */\r\n        let start = 0;\r\n        let end = 9;\r\n\r\n        /* Apply pagination */\r\n        if (pageNumber !== 0 && filtered.length > 9) {\r\n          start = pageNumber * 9;\r\n          end = start + 9;\r\n        }\r\n\r\n        const pageResults = filtered.slice(start, end);\r\n\r\n        if (filtered.length > 9 && pageResults.length === 9) {\r\n          ReactDOM.render(\r\n            <PageButton name=\"Next Page\" onClick={() => this.nextPage()} />,\r\n            document.getElementById(\"pagination\")\r\n          );\r\n        } else if (pageNumber !== 0) {\r\n          ReactDOM.render(\r\n            <PageButton name=\"Prev Page\" onClick={() => this.prevPage()} />,\r\n            document.getElementById(\"pagination\")\r\n          );\r\n        } else {\r\n          unmountComponentAtNode(document.getElementById(\"pagination\"));\r\n        }\r\n\r\n        /* Render results */\r\n        ReactDOM.render(\r\n          <Gallery results={pageResults} />,\r\n          document.getElementById(\"gallery\")\r\n        );\r\n\r\n      });\r\n\t\r\n  }\r\n\r\n  /* Function to add or remove brand filter */\r\n  toggleBrands = (filter) => {\r\n    \r\n    const filters = {...this.state.filters}\r\n    \r\n    if (!this.state.filters.brands.includes(filter)) {\r\n      filters.brands.push(filter);\r\n    } else {\r\n      filters.brands = this.state.filters.brands.filter(function (e) {\r\n        return e !== filter;\r\n      });\r\n    }\r\n    \r\n    this.setState({filters})\r\n    this.setState({pageNumber: 0})\r\n    \r\n    this.getPhones(0);\r\n  }\r\n\r\n  /* Function to add or remove OS filter */\r\n  toggleOS = (filter) => {\r\n    \r\n    const filters = {...this.state.filters}\r\n    \r\n    if (!this.state.filters.os.includes(filter)) {\r\n      filters.os.push(filter);\r\n    } else {\r\n      filters.os = this.state.filters.os.filter(function (e) {\r\n        return e !== filter;\r\n      });\r\n    }\r\n\r\n    this.setState({filters})\r\n    this.setState({pageNumber: 0})\r\n    \r\n    this.getPhones(0);\r\n  }\r\n  \r\n  /* Function to add or remove maximum price filter */\r\n  toggleMaxPrice = (filter) => {\r\n    \r\n    const filters = {...this.state.filters}\r\n    \r\n    if (this.state.filters.maxPrice !== filter) {\r\n      filters.maxPrice = filter;\r\n    } else {\r\n      filters.maxPrice = 5000;\r\n    }\r\n    \r\n    this.setState({filters})\r\n    this.setState({pageNumber: 0})\r\n    this.getPhones(0)\r\n  }\r\n\r\n  /* Function to sort results by price */\r\n  sortResults = (filter) => {\r\n    \r\n    const filters = {...this.state.filters}\r\n    \r\n    if (this.state.filters.sorted) {\r\n      filters.sorted = false;\r\n    } else {\r\n      filters.sorted = true;\r\n    }\r\n    \r\n    this.setState({filters})\r\n    this.getPhones(this.state.pageNumber);\r\n  }\r\n\r\n  /* Function for pagination to go to next page of results */\r\n  nextPage = () => {\r\n    \r\n    const nextPageNumber = this.state.pageNumber + 1;\r\n    \r\n    this.setState({\r\n        pageNumber: nextPageNumber\r\n    }, () => {\r\n        this.getPhones(this.state.pageNumber);\r\n    });\r\n    \r\n  }\r\n\r\n  /* Function for pagination to go to previous page of results */\r\n  prevPage = () => {\r\n    \r\n    const prevPageNumber = this.state.pageNumber - 1;\r\n    \r\n    this.setState({pageNumber: prevPageNumber})\r\n\r\n    this.setState({\r\n        pageNumber: prevPageNumber\r\n    }, () => {\r\n        this.getPhones(this.state.pageNumber);\r\n    });\r\n    \r\n  }\r\n    \r\n}\r\n\r\n/* Function for pagination to go to previous page of results */\r\nclass PageButton extends React.Component {\r\n  render() {\r\n    return <button onClick={this.props.onClick}>{this.props.name}</button>;\r\n  }\r\n}\r\n\r\n\r\nexport default GalleryContainer;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport MainLogo from \"./assets/vodafone_logo.svg\";\r\nimport GalleryContainer from \"./components/GalleryContainer\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"app-header\">\r\n          <img className=\"main-logo\" src={MainLogo} alt=\"Vodafone\" />\r\n      </header>\r\n      <GalleryContainer />\r\n      <div id=\"phone-details\" className=\"modal\"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}